{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Home"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"workflow/codestandards/","text":"Code Standards Bracket Positioning MyFunction() { ... } MyFunction2() ... (a<b?a:b) if () { ... } else if { ... } else { } Class Order and Spacing Const Variables Functions Casing MY_CONST MyFunction MyClass myVariable MyEnum.MY_MODE IMyInterface","title":"Code Standards"},{"location":"workflow/codestandards/#code-standards","text":"","title":"Code Standards"},{"location":"workflow/codestandards/#bracket-positioning","text":"MyFunction() { ... } MyFunction2() ... (a<b?a:b) if () { ... } else if { ... } else { }","title":"Bracket Positioning"},{"location":"workflow/codestandards/#class-order-and-spacing","text":"Const Variables Functions","title":"Class Order and Spacing"},{"location":"workflow/codestandards/#casing","text":"MY_CONST MyFunction MyClass myVariable MyEnum.MY_MODE IMyInterface","title":"Casing"},{"location":"workflow/versioncontrol/","text":"Version Control Locking & Releasing of scenes (to avoid working on the same scene) Daily Pull mandatory (Project must NOT be open in Unity during Pull!)! Daily Push mandatory (If work in Unity was done) Weekly playable build appreciated","title":"Version Control"},{"location":"workflow/versioncontrol/#version-control","text":"Locking & Releasing of scenes (to avoid working on the same scene) Daily Pull mandatory (Project must NOT be open in Unity during Pull!)! Daily Push mandatory (If work in Unity was done) Weekly playable build appreciated","title":"Version Control"}]}